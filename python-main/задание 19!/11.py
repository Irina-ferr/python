# –ü–æ—Å—Ç—Ä–æ–π—Ç–µ –∑–∞–∫—Ä–∞—à–µ–Ω–Ω—É—é –∫–æ–Ω—Ç—É—Ä–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –∏ —Ç—Ä—ë—Ö–º–µ—Ä–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –¥–ª—è
# —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–≤—É—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö –≤ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
# ùë• ‚àà [‚àí3; 3], ùë¶ ‚àà [‚àí3; 3]:
#  ùëß = tg(ùë•ùë¶),
# –ü–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º png.
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
x = np . arange ( -3 , 3 , 0.01)
y = np . arange ( -3 , 3 , 0.01)
X , Y = np . meshgrid (x , y )
Z = np.tan(X * Y)
plt . contourf (X , Y , Z )
plt . savefig ( 'a.png')

fig = plt.figure ()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(X, Y, Z, cmap='viridis')
plt . savefig ( 'b.png')
plt . show ()

